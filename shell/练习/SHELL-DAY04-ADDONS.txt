
回顾：
1）字符串处理
如何从一个字符串里截取一部分：
     ${变量名:起始位置:长度}
     ${变量名::长度}
     ${变量名:起始位置}
     命令行 | cut  -b 起始位置-结束位置
     命令行 | cut  -b -结束位置
     命令行 | cut  -b 起始位置-
     命令行 | cut  -b 字符位置
     命令行 | cut  -d '分隔符'   -f 起始字段-结束字段
如何替换一个字符串里的一部分：
     ${变量名/old/new}
     ${变量名//old/new}
如何删除一个字符串开头的一部分（砍头）：
     ${变量名#*关键词}
     ${变量名##*关键词}
如何删除一个字符串结尾的一部分（剁脚）：
     ${变量名%关键词*}
     ${变量名%%关键词*}
如何为一个变量指定初始值：
     ${变量名:=初始值}
2）数组
     数组名=(值1  值2  值3 .. ..)
     ${数组名[下标编号]}、${数组名[@]}
     数组名[下标编号]=新的值
     ${#数组名[@]}、${#变量名}
3）expect预期交互
如何在一个Shell脚本内部嵌入expect代码，来实现预期交互
#!/bin/bash
其他shell语句.. ..
expect  << EOF
spawn  ssh、ftp等需要交互操作的命令行
expect  "预计会出现的提示信息"  { send  "需要输入的信息\r"}
expect  "预计会出现的提示信息"  { send  "需要输入的信息\r"}
expect  "预计会出现的提示信息"  { send  "需要输入的信息\r"}
EOF

4）正则表达式
使用特殊的字符来表示不确定的字符串
^.*root.*$

指定匹配次数的 ――
+   最少一次
?   最多一次
*   任务多次
{n,m}  从n到m次
{n}  n次
{,m}  最多m次
{n,}  最少n次

指定匹配范围的 ――
[axM?#]  匹配这个集合里单个字符
[^axM?#]  匹配不包括这个集合里单个字符
\
()
|

列出系统当中使用的登录Shell是/bin/bash或用户名是adm的账号名称？
# egrep  '/bin/bash|adm'  /etc/passwd | cut -d: -f1



Shell编程综合练习：

1. 编写一个死循环测试脚本
1）执行脚本后打开firefox浏览器，访问http://server0.example.com/
2）如果firefox窗口被关闭，自动重启步骤1
提示：
!!!! 使用 while  true 死循环，调用 firefox  URL 操作

2. 编写序列用户管理脚本
1）编写脚本 uadd.sh，能够批量添加用户 ceshi01、ceshi02、……、ceshi20
2）编写脚本 udel.sh，能够批量删除用户 ceshi01、ceshi02、……、ceshi20
提示：
!!!! 编号小于10的用户的名称前缀为 ceshi0，其余用户的前缀为 ceshi
!!!! 也可以用 seq  -w  1  20 生成等宽数列

3.  编写脚本 tc.sh，
    1）找出/usr/share/doc/下的所有文件
    2）如果文件的类型是text，则wc -l统计此文件的行数，显示“文件 xxx，一共 nn 行”
    3）最后显示“一共统计了 nn 个文件，累计总行数 nn 行”
提示：
!!!! 使用find命令列出所有目标文件
!!!! 通过“file  文件路径...”检测文件类型，看结果是否出现 text 以便筛选

4. 编写脚本 /root/vhost_add，为server0快速添加新的虚拟Web主机
1）虚拟主机的域名由脚本在执行时指定（./vhost_add  www0.example.com），若未指定域名，则提示正确用法后退出脚本
2）如果指定FQDN的虚拟主机已经存在，提示“虚拟主机XX已存在”，退出脚本
3）执行脚本后能够向 /etc/httpd/conf.d/vhosts.conf 添加新配置
4）并为此虚拟机建立网页目录 /var/www/FQDN，首页内容为虚拟主机的域名
5）在本机 /etc/hosts 文件末尾追加“172.25.0.11  虚拟Web主机域名”记录
提示：
!!!! 需提前准备好 httpd 服务器
!!!! 通过检查 vhosts.conf 文件是否存在'.*ServerName.*域名.*”记录判断是否存在
!!!! 追加记录用echo  "文件内容" >>   文件路径

5. 为指定的一批计算机远程部署XX文件
1. 需要部署的文件从网址 http://sever0.example.cm/a.html 获取
2. 部署的目标位置 /tmp/a.html
3. 目标计算机的IP地址存放在文件 ipadds.txt 中（172.25.0.11、172.25.0.10）
4. 用于认证的身份信息：用户名 root、密码 redhat

6. 正则表示式操作练习
1）新建测试文件 a.txt，内容如下
Tarena IT Group. @2018-2028
@ IN NS mail.tedu.cn
bt bat bet boot booot keroot root rooty
52:54:00:90:A7:A2
1234567@qq.com
192.168.4.5 3.1415926
1.2.3.4.5  No:6.7.8.9
hunter@tedu.cn
mike:x:500:500::/home/mike:/bin/bash
 
2）找出以b开始、t结尾，中间包含2～3个字母的字符串
# egrep  -o  'b[a-z]{2,3}t'  a.txt
3）找出包括大写字母的行、找出只包括数字或.的行
# egrep  [A-Z]  a.txt
# egrep  -v  [^0-9.]  a.txt
4）找出正确的电子邮箱地址
# egrep '[a-Z0-9_]{2,}@([a-Z0-9]+\.){1,3}[a-Z0-9]{2,}' a.txt
5）找出以m结尾包括3个字符的独立字符串
# egrep '\b..m\b' a.txt
6）找出以数字开头、数字结尾的行
# egrep '^[0-9].*[0-9]$' a.txt
7）找出每行的第3个字符
# egrep -o '^(.)(.)(.)' a.txt | cut -b 3
8）找出每行的倒数第3个字符
egrep -o '(.)(.)(.)$' a.txt | cut -b 1


7. 详见TTS平台上DAy01~DAY04的“经典案例”，完成未练习过的部分



